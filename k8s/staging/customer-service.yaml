apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service-staging
  namespace: staging
  labels:
    app: customer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-service
  template:
    metadata:
      labels:
        app: customer-service
    spec:
      containers:
      - name: customer-service-container
        image: nginx:alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: POSTGRES_HOST
          value: customer-db-service-staging
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: ecomm-config-staging
              key: CUSTOMERS_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: ecomm-secrets-d-aks
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ecomm-secrets-d-aks
              key: POSTGRES_PASSWORD
        - name: ENVIRONMENT
          value: staging
---
apiVersion: v1
kind: Service
metadata:
  name: customer-service-staging
  namespace: staging
  labels:
    app: customer-service
spec:
  selector:
    app: customer-service
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 80
  type: LoadBalancer
